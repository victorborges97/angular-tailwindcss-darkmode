// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

model User {
    id       Int       @id @default(autoincrement())
    name     String
    imageUrl String?
    usuario  String    @unique
    email    String    @unique
    password String
    topics   Topic[]
    Comment  Comment[]
    Forum    Forum[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userStarsTopic UserStarsTopic[]

    @@index([usuario, email])
    @@map("users")
}

model Topic {
    id        Int       @id @default(autoincrement())
    title     String
    slug      String    @unique
    content   String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    comments  Comment[]
    tags      Tag[]

    views Int @default(0)

    forum   Forum @relation(fields: [forumId], references: [id])
    forumId Int

    author   User @relation(fields: [authorId], references: [id])
    authorId Int

    userStarsTopic UserStarsTopic[]

    @@index([title, content])
    @@map("topics")
}

model Comment {
    id        String   @id @default(cuid())
    content   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    author   User @relation(fields: [authorId], references: [id])
    authorId Int

    forum   Forum @relation(fields: [forumId], references: [id])
    forumId Int

    topic   Topic @relation(fields: [topicId], references: [id])
    topicId Int

    @@index([forumId, topicId])
    @@map("comments")
}

model Tag {
    id   Int    @id @default(autoincrement())
    name String
    tag  String @unique

    topics Topic[]

    @@index([tag])
    @@map("tags")
}

model Forum {
    id          Int      @id @default(autoincrement())
    name        String
    description String
    imageUrl    String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    topics   Topic[]
    comments Comment[]

    user   User @relation(fields: [userId], references: [id])
    userId Int

    @@index([userId, name, id])
    @@map("foruns")
}

model UserStarsTopic {
    topic   Topic @relation(fields: [topicId], references: [id])
    topicId Int

    user   User @relation(fields: [userId], references: [id])
    userId Int

    @@id([userId, topicId])
    @@index([userId, topicId])
}
